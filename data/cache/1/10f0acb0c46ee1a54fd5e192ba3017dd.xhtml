
<h1 class="sectionedit1" id="основной_синтаксис">Основной синтаксис</h1>
<div class="level1">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441&quot;,&quot;hid&quot;:&quot;\u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439_\u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-51&quot;} -->
<h1 class="sectionedit2" id="todo_докопировать_httpskotlinlangru_docs_reference_basic-syntaxhtml">// TODO докопировать https://kotlinlang.ru/docs/reference/basic-syntax.html</h1>
<div class="level1">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;\/\/ TODO \u0434\u043e\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c https:\/\/kotlinlang.ru\/docs\/reference\/basic-syntax.html&quot;,&quot;hid&quot;:&quot;todo_\u0434\u043e\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c_httpskotlinlangru_docs_reference_basic-syntaxhtml&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:2,&quot;range&quot;:&quot;52-155&quot;} -->
<h2 class="sectionedit3" id="определение_имени_пакета">Определение имени пакета</h2>
<div class="level2">

<p>
Имя пакета указывается в начале исходного файла, так же как и в Java:
</p>
<pre class="code">package my.demo

import java.util.*

// ...</pre>

<p>
Но в отличие от Java, нет необходимости, чтобы структура пакетов совпадала со структурой папок: исходные файлы могут располагаться в произвольном месте на диске.
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d\u0438 \u043f\u0430\u043a\u0435\u0442\u0430&quot;,&quot;hid&quot;:&quot;\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435_\u0438\u043c\u0435\u043d\u0438_\u043f\u0430\u043a\u0435\u0442\u0430&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:3,&quot;range&quot;:&quot;156-692&quot;} -->
<h2 class="sectionedit4" id="объявление_функции">Объявление функции</h2>
<div class="level2">

<p>
Функция принимает два аргумента Int и возвращает Int:
</p>
<pre class="code">fun sum(a: Int, b: Int): Int {
  return a + b
}</pre>

<p>
Функция с выражением в качестве тела и автоматически определенным типом возвращаемого значения:
</p>

<p>
<code>fun sum(a: Int, b: Int) = a + b</code>
</p>

<p>
Функция, не возвращающая никакого значения (void в Java):
</p>
<pre class="code">fun printSum(a: Int, b: Int): Unit {
  print(a + b)
}</pre>

<p>
Тип возвращаемого значения Unit может быть опущен:
</p>
<pre class="code">fun printSum(a: Int, b: Int) {
  print(a + b)
}</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;\u041e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438&quot;,&quot;hid&quot;:&quot;\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435_\u0444\u0443\u043d\u043a\u0446\u0438\u0438&quot;,&quot;codeblockOffset&quot;:1,&quot;secid&quot;:4,&quot;range&quot;:&quot;693-1435&quot;} -->
<h2 class="sectionedit5" id="определение_внутренних_переменных">Определение внутренних переменных</h2>
<div class="level2">

<p>
Неизменяемая (только для чтения) внутренняя переменная:
</p>
<pre class="code">val a: Int = 1
val b = 1   // Тип `Int` выведен автоматически
val c: Int  // Тип обязателен, когда значение не инициализируется
c = 1       // последующее присвоение</pre>

<p>
Изменяемая переменная:
</p>
<pre class="code">var x = 5 // Тип `Int` выведен автоматически
x += 1</pre>

<p>
Глобальные переменные:
</p>
<pre class="code">val PI = 3.14
var x = 0

fun incrementX() { 
    x += 1 
}</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445&quot;,&quot;hid&quot;:&quot;\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435_\u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0445_\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445&quot;,&quot;codeblockOffset&quot;:4,&quot;secid&quot;:5,&quot;range&quot;:&quot;1436-2140&quot;} -->
<h2 class="sectionedit6" id="комментарии">Комментарии</h2>
<div class="level2">

<p>
Также, как Java и JavaScript, Kotlin поддерживает однострочные комментарии.
</p>
<pre class="code">// однострочный комментарий

/* Блочный комментарий
   из нескольких строк. */
   </pre>

<p>
В отличие от Java, блочные комментарии могут быть вложенными.
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438&quot;,&quot;hid&quot;:&quot;\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438&quot;,&quot;codeblockOffset&quot;:7,&quot;secid&quot;:6,&quot;range&quot;:&quot;2141-2564&quot;} -->
<h2 class="sectionedit7" id="использование_строковых_шаблонов">Использование строковых шаблонов</h2>
<div class="level2">

<p>
Допустимо использование переменных внутри строк в формате $name или ${name}:
</p>
<pre class="code">fun main(args: Array&lt;String&gt;) {
  if (args.size == 0) return

  print(&quot;Первый аргумент: ${args[0]}&quot;)
}</pre>
<pre class="code">var a = 1
// просто имя переменной в шаблоне:
val s1 = &quot;a равно $a&quot; 

a = 2
// произвольное выражение в шаблоне:
val s2 = &quot;${s1.replace(&quot;равно&quot;, &quot;было равно&quot;)}, но теперь равно $a&quot;

/*
  Результат работы программы:
  a было равно 1, но теперь равно 2
*/</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432&quot;,&quot;hid&quot;:&quot;\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435_\u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445_\u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432&quot;,&quot;codeblockOffset&quot;:8,&quot;secid&quot;:7,&quot;range&quot;:&quot;2565-&quot;} -->