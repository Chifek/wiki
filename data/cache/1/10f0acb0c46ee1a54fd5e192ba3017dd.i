a:74:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:35:"Основной синтаксис";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:52;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:87:"// TODO докопировать https://kotlinlang.ru/docs/reference/basic-syntax.html";i:1;i:1;i:2;i:52;}i:2;i:52;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:52;}i:6;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:156;}i:7;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:46:"Определение имени пакета";i:1;i:2;i:2;i:156;}i:2;i:156;}i:8;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:156;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:156;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:"Имя пакета указывается в начале исходного файла, так же как и в Java:";}i:2;i:217;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:343;}i:12;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:45:"
package my.demo

import java.util.*

// ...
";i:1;N;i:2;N;}i:2;i:343;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:343;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:292:"Но в отличие от Java, нет необходимости, чтобы структура пакетов совпадала со структурой папок: исходные файлы могут располагаться в произвольном месте на диске.";}i:2;i:398;}i:15;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:690;}i:16;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:693;}i:17;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:35:"Объявление функции";i:1;i:2;i:2;i:693;}i:2;i:693;}i:18;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:693;}i:19;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:693;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:"Функция принимает два аргумента Int и возвращает Int:";}i:2;i:743;}i:21;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:841;}i:22;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:49:"
fun sum(a: Int, b: Int): Int {
  return a + b
}
";i:1;N;i:2;N;}i:2;i:841;}i:23;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:841;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:178:"Функция с выражением в качестве тела и автоматически определенным типом возвращаемого значения:";}i:2;i:899;}i:25;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1077;}i:26;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1077;}i:27;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:1079;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"fun sum(a: Int, b: Int) = a + b";}i:2;i:1081;}i:29;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:1112;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1114;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1114;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:"Функция, не возвращающая никакого значения (void в Java):";}i:2;i:1116;}i:33;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1217;}i:34;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:55:"
fun printSum(a: Int, b: Int): Unit {
  print(a + b)
}
";i:1;N;i:2;N;}i:2;i:1217;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1217;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:"Тип возвращаемого значения Unit может быть опущен:";}i:2;i:1281;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1370;}i:38;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:49:"
fun printSum(a: Int, b: Int) {
  print(a + b)
}
";i:1;N;i:2;N;}i:2;i:1377;}i:39;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1436;}i:40;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:64:"Определение внутренних переменных";i:1;i:2;i:2;i:1436;}i:2;i:1436;}i:41;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1436;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1436;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"Неизменяемая (только для чтения) внутренняя переменная:";}i:2;i:1514;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1622;}i:45;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:255:"
val a: Int = 1
val b = 1   // Тип `Int` выведен автоматически
val c: Int  // Тип обязателен, когда значение не инициализируется
c = 1       // последующее присвоение
";i:1;N;i:2;N;}i:2;i:1622;}i:46;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1622;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"Изменяемая переменная:";}i:2;i:1887;}i:48;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1929;}i:49;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:76:"
var x = 5 // Тип `Int` выведен автоматически
x += 1
";i:1;N;i:2;N;}i:2;i:1937;}i:50;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1937;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"Глобальные переменные:";}i:2;i:2023;}i:52;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2071;}i:53;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:60:"
val PI = 3.14
var x = 0

fun incrementX() { 
    x += 1 
}
";i:1;N;i:2;N;}i:2;i:2071;}i:54;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2141;}i:55;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"Комментарии";i:1;i:2;i:2;i:2141;}i:2;i:2141;}i:56;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2141;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2141;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:119:"Также, как Java и JavaScript, Kotlin поддерживает однострочные комментарии.";}i:2;i:2178;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2303;}i:60;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:142:"
// однострочный комментарий

/* Блочный комментарий
   из нескольких строк. */
   
";i:1;N;i:2;N;}i:2;i:2303;}i:61;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2303;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:108:"В отличие от Java, блочные комментарии могут быть вложенными.";}i:2;i:2455;}i:63;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2563;}i:64;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2565;}i:65;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:62:"Использование строковых шаблонов";i:1;i:2;i:2;i:2565;}i:2;i:2565;}i:66;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2565;}i:67;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2565;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:130:"Допустимо использование переменных внутри строк в формате $name или ${name}:";}i:2;i:2642;}i:69;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2778;}i:70;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:118:"
fun main(args: Array<String>) {
  if (args.size == 0) return

  print("Первый аргумент: ${args[0]}")
}
";i:1;N;i:2;N;}i:2;i:2778;}i:71;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:389:"
var a = 1
// просто имя переменной в шаблоне:
val s1 = "a равно $a" 

a = 2
// произвольное выражение в шаблоне:
val s2 = "${s1.replace("равно", "было равно")}, но теперь равно $a"

/*
  Результат работы программы:
  a было равно 1, но теперь равно 2
*/
";i:1;N;i:2;N;}i:2;i:2910;}i:72;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3307;}i:73;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3307;}}