a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1629919465;s:8:"modified";i:1629922183;}s:7:"creator";s:6:"ruslan";s:4:"user";s:6:"chifek";s:11:"last_change";a:8:{s:4:"date";i:1629922183;s:2:"ip";s:11:"95.31.13.88";s:4:"type";s:1:"E";s:2:"id";s:18:"php_patterns_solid";s:4:"user";s:6:"chifek";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:80;}s:11:"contributor";a:1:{s:6:"chifek";s:6:"ruslan";}s:5:"title";s:5:"SOLID";s:11:"description";a:2:{s:15:"tableofcontents";a:7:{i:0;a:4:{s:3:"hid";s:5:"solid";s:5:"title";s:5:"SOLID";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:102:"принцип_единственной_ответственности_single_responsibility_principle";s:5:"title";s:104:"Принцип единственной ответственности (Single Responsibility Principle)";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:78:"принцип_открытости_закрытости_open-closed_principle";s:5:"title";s:80:"Принцип открытости/закрытости (Open-closed Principle)";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:95:"принцип_подстановки_барбары_лисков_liskov_substitution_principle";s:5:"title";s:97:"Принцип подстановки Барбары Лисков (Liskov Substitution Principle)";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:4;a:4:{s:3:"hid";s:88:"принцип_разделения_интерфейса_interface_segregation_principle";s:5:"title";s:90:"Принцип разделения интерфейса (Interface Segregation Principle)";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:5;a:4:{s:3:"hid";s:87:"принцип_инверсии_зависимостей_dependency_inversion_principle";s:5:"title";s:89:"Принцип инверсии зависимостей (Dependency Inversion Principle)";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:6;a:4:{s:3:"hid";s:12:"ссылки";s:5:"title";s:12:"Ссылки";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:734:"SOLID

Принцип единственной ответственности (Single Responsibility Principle)

Существует лишь одна причина, приводящая к изменению класса.

Один класс должен решать только какую-то одну задачу. Он может иметь несколько методов, но они должны использоваться лишь для решения общей задачи. Все методы и свойства должны служить одной цели. Если класс имеет несколько назначений, его нужно разделить на отдельные классы.…";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1629919465;s:8:"modified";i:1629922183;}s:7:"creator";s:6:"ruslan";s:4:"user";s:6:"chifek";s:11:"last_change";a:8:{s:4:"date";i:1629922183;s:2:"ip";s:11:"95.31.13.88";s:4:"type";s:1:"E";s:2:"id";s:18:"php_patterns_solid";s:4:"user";s:6:"chifek";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:80;}s:11:"contributor";a:1:{s:6:"chifek";s:6:"ruslan";}}}